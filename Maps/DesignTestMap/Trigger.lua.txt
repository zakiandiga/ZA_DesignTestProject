-- Module Imports
local core = require("core")
local ui = require("UI")
local enemy = require("Enemy")
local HeroBase = require("HeroBase")
local EarthBender = require("HeroEarthBender")
local IceMage = require("HeroIceMage")
local Utilities = require("Utilities")

-- CONSTANTS
local hero_spawn_points = {
    { x = 13, y = 13 },
    { x = 18, y = 18 }
}

-- VARIABLES
local score = 0
local selected_unit
local current_hero
local secondary_hero
local ancient_tree = DCEI.FindUnit("Ancient Tree")

local level_ongoing = true


-- TRIGGERS
function OnUnitDied()
    local died_unit = DCEI.TriggeringUnit

    if DCEI.GetUnitPlayerId(died_unit) == -1 then --enemy dies
        enemy:OnEnemyDies(died_unit)
        score = score + enemy:GetEnemyScoreValue(died_unit)
        ui:UpdateScore(score) 
    elseif died_unit == current_hero.hero_unit or died_unit == ancient_tree then --hero dies
        level_ongoing = false
        GameOver()        
    end
end

function GameOver()
    ui:HandleGameOver()
end

function SpawnEnemies()
    if not enemy:ReachSpawnLimit() then
        enemy:SpawnEnemy() 
    end   
end

function SpawningTimer()
    SpawnEnemies()    
    local duration = core.Random(3, 5)
    if not level_ongoing then 
        return 
    end
    
    DCEI.TriggerAddTimerEventElapsed(SpawningTimer, duration, false, true)
end

function OnLevelUpButtonPressed()
    enemy:InitiateGlobalLevelUp()
end

-- INITIALIZE
function OnMapStart()
    core.HideDefaultUi()     
    
    InitializeLevel()
    ui:InitializeUi(current_hero, secondary_hero)
end

function InitializeLevel()
    current_hero = EarthBender:New(hero_spawn_points[1])    
    local ancient_tree = DCEI.FindUnit("Ancient Tree")
    core.SetGameSpeed(0)
    SpawningTimer()
    level_ongoing = true
end

DCEI.TriggerAddTimerEventElapsed(OnMapStart, 0)
DCEI.TriggerAddUnitDiedEvent(DCEI.UnitAny, OnUnitDied)
DCEI.TriggerAddMappedKeyDownEvent("LevelUpDebug", OnLevelUpButtonPressed)
